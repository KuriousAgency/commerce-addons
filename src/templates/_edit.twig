{% extends "commerce-addons/_layout" %}

{# {% set selectedSubnavItem = "promotions" %} #}

{% set crumbs = [
    { label: "Addons"|t('commerce-addons'), url: url('commerce-addons') },
] %}

{% set fullPageForm = true %}

{% import "_includes/forms" as forms %}
{% import "commerce/_includes/forms/commerceForms" as commerceForms %}


{% set discountClasses = "" %}
{% if (discount.getErrors('name')) %}
    {% set discountClasses = "error" %}
{% endif %}

{% set conditionsClasses = "" %}
{% if(discount.getErrors('startDate') or discount.getErrors('endDate') or discount.getErrors('productTypes')) %}
    {% set conditionsClasses = "error" %}
{% endif %}
{% if ( discount.getErrors('purchasableIds') or discount.getErrors('categoryIds') ) %}
    {% set conditionsClasses = "error" %}
{% endif %}

{% set productClasses = "" %}
{% if ( discount.getErrors('productPurchasableIds') or discount.getErrors('productCategoryIds') ) %}
    {% set productClasses = "error" %}
{% endif %}

{% set tabs = {
    0: {'label':'Addon'|t('commerce-addons'),'url':'#discount','class':discountClasses},
    1: {'label':'Conditions'|t('commerce-addons'),'url':'#conditions','class':conditionsClasses},
    2: {'label':'Products'|t('commerce-addons'),'url':'#products','class':productClasses},
    3: {'label':'Amounts'|t('commerce-addons'),'url':'#amounts'}
} %}

{% block content %}

    <input type="hidden" name="action" value="commerce-addons/default/save">
    {{ redirectInput('commerce-addons') }}
    {% if discount.id %}
        <input type="hidden" name="sortOrder" value="{{ discount.sortOrder }}">
        <input type="hidden" name="id" value="{{ discount.id }}">
    {% endif %}

    <div id="discount">
        {{ forms.textField({
            first: true,
            label: "Name"|t('commerce-addons'),
            instructions: "What this addon will be called in the CP."|t('commerce-addons'),
            id: 'name',
            name: 'name',
            value: discount.name,
            errors: discount.getErrors('name'),
            autofocus: true,
            required: true,
        }) }}

        {{ forms.textField({
            label: "Description"|t('commerce-addons'),
            instructions: "Addon description."|t('commerce-addons'),
            id: 'description',
            name: 'description',
            value: discount.description,
            errors: discount.getErrors('description'),
        }) }}

        {{ forms.checkboxField({
            label: "Enable this addon"|t('commerce-addons'),
            id: 'enabled',
            name: 'enabled',
            value: 1,
            checked: discount.enabled,
            errors: discount.getErrors('enabled')
        }) }}

    </div>

    <div id="conditions" class="hidden">

        {{ forms.dateTimeField({
            label: "Start Date"|t('commerce-addons'),
            instructions: "Date from which the addon will be active. Leave blank for unlimited start date"|t('commerce-addons'),
            id: 'dateFrom',
            name: 'dateFrom',
            value: discount.dateFrom,
            errors: discount.getErrors('dateFrom'),
        }) }}

        {{ forms.dateTimeField({
            label: "End Date"|t('commerce-addons'),
            instructions: "Date when the addon will be finished. Leave blank for unlimited end date"|t('commerce-addons'),
            id: 'dateTo',
            name: 'dateTo',
            value: discount.dateTo,
            errors: discount.getErrors('dateTo'),
        }) }}

        {% if groups|length %}
            {{ forms.multiselectField({
                label: 'User Groups'|t('commerce-addons'),
                instructions: "Groups for which this addon will be applicable to. Leave blank for all groups"|t('commerce-addons'),
                id: 'groups',
                name: 'groups',
                options: groups,
                values: discount.getUserGroupIds(),
                errors: discount.getErrors('groups'),
                class: 'selectize fullwidth',
            }) }}
        {% endif %}

        {% for purchasableType in purchasableTypes %}
            {% set instruction = "that has to be purchased for this addon to applicable."|t('commerce-addons') %}
            {{ forms.elementSelectField({
                id: 'purchasables-'~purchasableType.elementType|id,
                label: purchasableType.name,
                name: 'purchasables['~purchasableType.elementType~']',
                elements: purchasables[purchasableType.elementType] ?? null,
                elementType: purchasableType.elementType,
                limit: null,
                instructions: purchasableType.name~" "~instruction,
                errors: discount.getErrors('purchasables-'~purchasableType.elementType|replace('\\','-')),
            }) }}
        {% endfor %}
		
        {{ forms.elementSelectField({
            id: 'categories',
            label: 'Categories'|t('commerce-addons'),
            name: 'categories',
            elements: categories ? categories : null,
            elementType: categoryElementType,
            limit: null,
            instructions: "Categories that the purchasables must be related to for this addon to applicable."|t('commerce-addons'),
            errors: discount.getErrors('categories'),
        }) }}

		{% if ( discount.getErrors('purchasableIds') or discount.getErrors('categoryIds') ) %}
			<ul class="errors">
        		<li>Please select at least one product or a category</li>
            </ul>
		{% endif %}

        {# {{ forms.textField({
            label: "Purchase Total"|t('commerce-addons'),
            instructions: "Restrict the discount to only those orders where the customer has purchased a minimum total value of matching items."|t('commerce-addons'),
            id: 'purchaseTotal',
            name: 'purchaseTotal',
            value: discount.purchaseTotal,
            type: 'number',
            errors: discount.getErrors('purchaseTotal'),
        }) }}

        {{ forms.textField({
            label: "Minimum Purchase Quantity"|t('commerce-addons'),
            instructions: "Minimum number of matching items that need to be ordered for this discount to apply."|t('commerce-addons'),
            id: 'purchaseQty',
            name: 'purchaseQty',
            value: discount.purchaseQty,
            type: 'number',
            errors: discount.getErrors('purchaseQty'),
        }) }}

        {{ forms.textField({
            label: "Maximum Purchase Quantity"|t('commerce-addons'),
            instructions: "Maximum number of matching items that can be ordered for this discount to apply. A zero value here will skip this condition."|t('commerce-addons'),
            id: 'maxPurchaseQty',
            name: 'maxPurchaseQty',
            value: discount.maxPurchaseQty,
            type: 'number',
            errors: discount.getErrors('maxPurchaseQty'),
        }) }}

        {{ forms.checkboxField({
            label: "Exclude this discount for products that are already on sale"|t('commerce-addons'),
            id: 'excludeOnSale',
            name: 'excludeOnSale',
            value: 1,
            checked: discount.excludeOnSale,
            errors: discount.getErrors('excludeOnSale')
        }) }} #}

		<input type="hidden" name="purchaseTotal" value="0">
		<input type="hidden" name="purchaseQty" value="0">
		<input type="hidden" name="maxPurchaseQty" value="0">
		<input type="hidden" name="excludeOnSale" value="0">

    </div>
	
	<div id="products" class="hidden">

		 {% for purchasableType in purchasableTypes %}
            {% set instruction = " that this addon will apply to."|t('commerce-addons') %}
            {{ forms.elementSelectField({
                id: 'productPurchasables-'~purchasableType.elementType|id,
                label: purchasableType.name,
                name: 'productPurchasables['~purchasableType.elementType~']',
                elements: productPurchasables[purchasableType.elementType] ?? null,
                elementType: purchasableType.elementType,
                limit: null,
                instructions: purchasableType.name~" "~instruction,
                errors: discount.getErrors('productPurchasables-'~purchasableType.elementType|replace('\\','-')),
            }) }}
        {% endfor %}

        {{ forms.elementSelectField({
            id: 'productCategories',
            label: 'Product Categories'|t('commerce-addons'),
            name: 'productCategories',
            elements: productCategories ? productCategories : null,
            elementType: categoryElementType,
            limit: null,
            instructions: "Categories that this addon will apply to."|t('commerce-addons'),
            errors: discount.getErrors('categories'),
        }) }}

		{% if ( discount.getErrors('productPurchasableIds') or discount.getErrors('productCategoryIds') ) %}
			<ul class="errors">
        		<li>Please select at least one product or a category</li>
            </ul>
		{% endif %}

	</div>

    <div id="amounts" class="hidden">

        {{ commerceForms.numberField({
            label: "Per Item Discount"|t('commerce-addons'),
            instructions: "The flat value which should discount each item in the order. i.e “1” for $1 off."|t('commerce-addons'),
            id: 'perItemDiscount',
            name: 'perItemDiscount',
            value: discount.perItemDiscount != 0 ? discount.perItemDiscount * -1 : 0,
            type: 'number',
            step: 'any',
            errors: discount.getErrors('perItemDiscount'),
        }) }}

        {% set pctDiscountInput %}
            <table class="inputs">
                <tr>
                    <td>
                        {{ forms.text({
                            id: 'percentDiscount',
                            name: 'percentDiscount',
                            size: 10,
                            value: discount.percentDiscountAsPercent,
                        }) }}
                    </td>
                    <td style="padding-left: 14px;">
                        {{ forms.select({
                            id: 'percentageOffSubject',
                            name: 'percentageOffSubject',
                            options: [
                                {label: "off the discounted item price"|t, value: 'discounted'},
                                {label: "off the original item price"|t, value: 'original'}
                            ],
                            value: discount.percentageOffSubject
                        }) }}
                    </td>
                </tr>
            </table>
        {% endset %}

        {{ forms.field({
            label: "Percent Discount"|t,
            instructions: "The percentile value which should discount each item in the cart. i.e. “4%” for 4% off. Percentages are rounded to 2 decimal places."|t,
            id: 'percentDiscount',
            errors: discount.getErrors('percentDiscount'),
        }, pctDiscountInput) }}

        {# {{ forms.checkboxField({
            label: "Remove all shipping costs from the order"|t('commerce-addons'),
            id: 'hasFreeShippingForOrder',
            name: 'hasFreeShippingForOrder',
            value: 1,
            checked: discount.hasFreeShippingForOrder
        }) }} #}

        {# {{ forms.checkboxField({
            label: "Remove shipping costs for matching products only"|t('commerce-addons'),
            id: 'hasFreeShippingForMatchingItems',
            name: 'hasFreeShippingForMatchingItems',
            value: 1,
            checked: discount.hasFreeShippingForMatchingItems,
            disabled: discount.hasFreeShippingForOrder
        }) }} #}

        {# {{ forms.checkboxField({
            label: "Don’t apply subsequent discounts if this discount is applied"|t('commerce-addons'),
            id: 'stopProcessing',
            name: 'stopProcessing',
            value: 1,
            checked: discount.stopProcessing,
            errors: discount.getErrors('stopProcessing')
        }) }} #}
    </div>
{% endblock %}


{% js %}
        $(function() {
            $('#groups').selectize({
                plugins: ['remove_button'],
                dropdownParent: 'body'
            });

            {# $('#code').on('keyup blur', function(event) {
                if (this.value.length === 0) {
                    $('#coupon-fields').addClass('hidden');
                } else {
                    $('#coupon-fields').removeClass('hidden');
                }
            }); #}

            {# $("#hasFreeShippingForOrder").click(function (){
                if ($("#hasFreeShippingForOrder").prop("checked")){
                    $("#hasFreeShippingForMatchingItems").prop("checked", false);
                    $("#hasFreeShippingForMatchingItems").prop("disabled", true);
                }else{
                    $("#hasFreeShippingForMatchingItems").prop("disabled", false);
                }
            }); #}

            {# $('#clear-coupon-btn').click(function(event) {
                var r = confirm("Are you sure you want to clear all usage history for this discount?");

                if (r == true) {
                    $('#clear-coupon-history-spinner').toggleClass('hidden');
                    $.ajax({
                        type: "POST",
                        dataType: 'json',
                        headers: {
                            "X-CSRF-Token" : '{{ craft.app.request.csrfToken }}',
                        },
                        url: '',
                        data: {
                            'action' : 'commerce/discounts/clear-coupon-usage-history',
                            'id': '{{ discount.id ?? '' }}'
                        },
                        success: function(data){
                            $('#clear-coupon-history-spinner').toggleClass('hidden');
                            $('#total-coupon-use-counter').val(0);
                            alert(Craft.t('commerce-addons', 'All coupon usage counters have been cleared'));
                            $('#clear-coupon-history').hide();
                        }
                    });
                }
            }); #}
        });
{% endjs %}